{"version":3,"sources":["redux/action-constants.js","constants/index.js","redux/actions/datatable-action.js","components/Table/index.js","components/HomePage/constants.js","components/HomePage/index.js","components/UserInfo/index.js","App.js","redux/reducers/datatable-reducer.js","redux/index.js","index.js"],"names":["DELETE","SORT","PAGINATION","DEFAULT","GET_USERS_URL","defaultAction","data","type","Table","callAction","cb","obj","this","props","actions","sortCb","cols","fixedHeader","className","Object","keys","map","col","scope","key","sortable","onClick","label","id","email","username","name","address","suite","street","city","zipcode","phone","website","company","k","React","Component","COLUMNS","displayName","isAction","HomePage","handleSortTable","keyName","sortType","state","sortColumn","toggleSortType","sortTable","setState","deleteEmployee","handlePaginationChange","e","pagination","target","value","renderPaginationDropdown","arr","currentPage","parseInt","totalPages","numberOfButtons","limit","i","push","val","openView","length","history","getActions","active","tableData","fetchTableData","withRouter","connect","dataTableReducer","pageSize","order","dispatch","pageNo","a","async","fetch","then","results","json","location","App","path","filterRecords","lastIndex","startIndex","slice","Math","ceil","INITIAL_STATE","combineReducers","action","index","findIndex","splice","sort","b","localeCompare","store","createStore","reducer","applyMiddleware","ReduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8ed3382.chunk.js","sourcesContent":["export const DELETE = 'DELETE';\n\nexport const SORT = 'SORT';\n\nexport const PAGINATION = 'PAGINATION';\n\nexport const DEFAULT = 'DEFAULT';\n","export const GET_USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n","import {\n    DELETE,\n    SORT,\n    PAGINATION,\n    DEFAULT,\n} from '../action-constants';\n\nimport { GET_USERS_URL } from '../../constants';\n\nfunction defaultAction(data) {\n    return {\n        type: DEFAULT,\n        data\n    }\n}\n\nfunction sortAction (data) {\n    return {\n        type: SORT,\n        data\n    }\n}\n\n\nfunction deleteAction (data) {\n    return {\n        type: DELETE,\n        data\n    }\n}\n\n\nfunction paginationAction (data) {\n    return {\n        type: PAGINATION,\n        data\n    }\n}\n\nexport function fetchTableData () {\n    return async dispatch => {\n        fetch(GET_USERS_URL)\n        .then(results => results.json())\n        .then(data => dispatch(defaultAction(data)));\n    }\n}\n\nexport function pagination (pageNo) {\n    return dispatch => {\n        dispatch(paginationAction({ pageNo }));\n    }\n}\n\nexport function sortTable (key, order = 'ASC') {\n    return dispatch => {\n        dispatch(sortAction({ order, key }));\n    }\n}\n\nexport function deleteEmployee (id) {\n    return dispatch => {\n        dispatch(deleteAction({ id }));\n    }\n}\n","import React from \"react\";\nimport \"./style.css\";\nexport default class Table extends React.Component {\n  callAction = (cb, obj) => () => {\n    cb(obj);\n  };\n\n  render() {\n    const { actions, sortCb, data, cols, fixedHeader } = this.props;\n    return (\n      <div className={`table-container ${fixedHeader ? \"fixed-header\" : \"\"}`}>\n        <table className=\"container\">\n          <thead>\n            <tr>\n              {Object.keys(cols).map(col => {\n                return (\n                  <th scope=\"col\" key={col}>\n                    {cols[col].sortable ? (\n                      <a onClick={sortCb(col)} className=\"sort-by\">\n                        {cols[col].label}\n                      </a>\n                    ) : (\n                      <span>{cols[col].label}</span>\n                    )}\n                  </th>\n                );\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {data.map(obj => {\n              return (\n                <tr key={obj.id}>\n                  <td>{obj.email}</td>\n                  <td>{obj.username}</td>\n                  <td>{obj.name}</td>\n                  <td>{obj.address && `${obj.address.suite} ${obj.address.street} ${obj.address.city} ${obj.address.zipcode}`}</td>\n                  <td>{obj.phone}</td>\n                  <td>{obj.website}</td>\n                  <td>{obj.company && obj.company.name}</td>\n                  {actions ? (\n                    <td>\n                      <div className=\"actions\">\n                        {actions.map(k => (\n                          <button\n                            type=\"button\"\n                            onClick={this.callAction(k.cb, obj)}\n                            key={k.label}\n                          >\n                            {k.label}\n                          </button>\n                        ))}\n                      </div>\n                    </td>\n                  ) : (\n                    \"\"\n                  )}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","export const COLUMNS = {\n  email:{\n    label: \"Email\",\n    sortable: true\n  },\n  username:{\n    label: \"Username\",\n    sortable: true\n  },\n  displayName:{\n    label: \"Display Name\",\n    sortable: false\n  },\n  address:{\n    label: \"Address\",\n    sortable: false\n  },\n  phone:{\n    label: \"Phone\",\n    sortable: false\n  },\n  website:{\n    label: \"Website\",\n    sortable: false\n  },\n  company:{\n    label: \"Company\",\n    sortable: false\n  },\n  actions:{\n    label: \"Actions\",\n    sortable: false,\n    isAction: true\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport {\n  sortTable,\n  fetchTableData,\n  deleteEmployee,\n  pagination\n} from \"../../redux/actions/datatable-action\";\nimport Table from \"../Table\";\nimport { COLUMNS } from \"./constants\";\nimport \"./style.css\";\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: null,\n      sortType: \"ASC\",\n      sortColumn: \"id\"\n    };\n  }\n\n  componentDidMount() {\n    if(this.props.tableData.length === 0) this.props.fetchTableData();\n  }\n\n  handleSortTable = keyName => () => {\n    let sortType;\n    if (keyName === this.state.sortColumn) {\n      sortType = this.toggleSortType();\n      this.props.sortTable(keyName, sortType);\n    } else {\n      sortType = \"ASC\";\n      this.props.sortTable(keyName, sortType);\n    }\n    this.setState({ sortType, sortColumn: keyName });\n  };\n\n  toggleSortType = () => {\n    if (this.state.sortType === \"ASC\") return \"DSC\";\n    return \"ASC\";\n  };\n\n  deleteEmployee = (obj) => this.props.deleteEmployee(obj.id);\n\n  handlePaginationChange = e => {\n    this.props.pagination(e.target.value);\n  };\n\n  renderPaginationDropdown = () => {\n    const arr = [];\n    const currentPage =\n      this.props.currentPage && parseInt(this.props.currentPage, 10);\n    const totalPages =\n      this.props.totalPages && parseInt(this.props.totalPages, 10);\n    const numberOfButtons =\n        this.props.numberOfButtons && parseInt(this.props.numberOfButtons, 10);\n    const limit = currentPage + numberOfButtons <= totalPages ? currentPage + numberOfButtons : totalPages;\n    for (let i = currentPage; i <= limit; i++) arr.push(i);\n    return (\n      <div>\n        <button\n          type=\"button\"\n          onClick={this.handlePaginationChange}\n          value={currentPage - 1 > 0 ? currentPage - 1 : currentPage}\n        >\n          Previous\n        </button>\n        {arr.map(val => (\n          <button\n            type=\"button\"\n            onClick={this.handlePaginationChange}\n            key={val}\n            value={val}\n          >\n            {val}\n          </button>\n        ))}\n        <button\n          type=\"button\"\n          onClick={this.handlePaginationChange}\n          value={currentPage + 1 <= limit ? currentPage + 1 : currentPage}\n        >\n          Next\n        </button>\n      </div>\n    );\n  };\n\n  openView = (obj = {}) => {\n    if (Object.keys(obj).length === 0) return [];\n    this.props.history.push(`/users/${obj.id}`, obj);\n  };\n\n  getActions = () => {\n    return [\n      {\n        label: \"Open\",\n        cb: this.openView\n      },\n      {\n        label: \"Delete\",\n        cb: this.deleteEmployee\n      }\n    ];\n  };\n\n  render() {\n    const { tableData } = this.props;\n    return (\n      <div className=\"body-container\">\n        <Table\n          actions={this.getActions()}\n          data={tableData}\n          sortCb={this.handleSortTable}\n          cols={COLUMNS}\n          fixedHeader={true}\n        />\n        <div>{this.renderPaginationDropdown()}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const {\n    dataTableReducer: { tableData, totalPages, currentPage, pageSize, numberOfButtons }\n  } = state;\n  return {\n    tableData,\n    totalPages,\n    currentPage,\n    pageSize,\n    numberOfButtons,\n  };\n};\n\nexport default withRouter(connect(\n  mapStateToProps,\n  {\n    sortTable,\n    pagination,\n    fetchTableData,\n    deleteEmployee\n  }\n)(HomePage));\n","import React from 'react';\nimport { withRouter } from \"react-router\";\nimport \"./style.css\";\n\nfunction UserInfo (props) {\n    const obj = props.history.location.state;\n    const handleClick = () => props.history.push('/');\n\n    return (\n        <div>\n            <div className=\"header-section\">\n                <div className=\"view-header\">{obj.name}</div>\n            </div>\n            <ul className=\"view-list\">\n                <li>\n                    <div className=\"label\">Email</div>\n                    <div className=\"value\">{obj.email}</div>\n                </li>\n                <li>\n                    <div className=\"label\">User Name</div>\n                    <div className=\"value\">{obj.username}</div>\n                </li>\n                <li>\n                    <div className=\"label\">Address</div>\n                    <div className=\"value\">{obj.address && `${obj.address.suite} ${obj.address.street} ${obj.address.city} ${obj.address.zipcode}`}</div>\n                </li>\n                <li>\n                    <div className=\"label\">Phone Number</div>\n                    <div className=\"value\">{obj.phone}</div>\n                </li>\n                <li>\n                    <div className=\"label\">Website</div>\n                    <div className=\"value\">{obj.website}</div>\n                </li>\n                <li>\n                    <div className=\"label\">Company</div>\n                    <div className=\"value\">{obj.company && obj.company.name}</div>\n                </li>\n            </ul>\n            <button onClick={handleClick}>Back</button>\n        </div>\n    );\n}\n\nexport default withRouter(UserInfo);\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport HomePage from './components/HomePage';\nimport UserInfo from './components/UserInfo';\nimport './App.css';\n\nclass App extends Component {\n\n  render () {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div id=\"modal-root\"></div>\n          <div className=\"App-header\">\n            <h2>Awesome Datatable</h2>\n          </div>\n          <Switch>\n            <Route path='/users/:userid'>\n              <UserInfo />\n            </Route>\n            <Route path='/'>\n              <HomePage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import {\n  DELETE,\n  SORT,\n  PAGINATION,\n} from \"../action-constants\";\n\n\nconst filterRecords = (state) => {\n  const lastIndex = state.currentPage * state.pageSize;\n  const startIndex = lastIndex - state.pageSize;\n  const tableData = state.data.slice(startIndex, lastIndex);\n  return {\n    ...state,\n    totalPages: Math.ceil(state.data.length / state.pageSize),\n    tableData,\n  };\n};\n\n\nconst INITIAL_STATE = {\n  data: [],\n  tableData: [],\n  currentPage: 1, // index of current page\n  totalPages: 1, // count of total number of pages\n  numberOfButtons: 5, // maximum number of pagination buttons to be shown\n  pageSize: 5, // number of rows in the table at a time\n};\n\n// after each operation set the totalPages\n\nexport default function dataTableReducer (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case DELETE: {\n      const index = state.data.findIndex(obj => obj.id === action.data.id);\n      state.data.splice(index, 1);\n      return filterRecords(state);\n    }\n    case SORT: {\n      const { order, key } = action.data;\n      const tableData = state.data.sort((a, b) => {\n        const val = typeof a[key] === 'string' ? a[key].localeCompare(b[key]) : a[key] - b[key];\n        if (order === 'ASC') return val;\n        else return -val;\n      });\n      return filterRecords({ ...state, tableData });\n    }\n    case PAGINATION: {\n      state.currentPage = action.data.pageNo;\n      return filterRecords(state);\n    }\n    default:\n      if (action.data) {\n        state.data = action.data;\n      }\n      return filterRecords(state);\n  }\n}\n","import {  combineReducers } from \"redux\";\nimport dataTableReducer from './reducers/datatable-reducer';\n\nexport default combineReducers({\n    dataTableReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport ReduxThunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducer from './redux';\nimport './index.css';\n\nconst store = createStore(reducer, applyMiddleware(ReduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}